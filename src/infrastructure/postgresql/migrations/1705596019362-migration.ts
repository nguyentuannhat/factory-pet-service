import { MigrationInterface, QueryRunner } from "typeorm";

export class Migrations1716868984131 implements MigrationInterface {
  name = 'Migrations1716868984131'

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`CREATE TABLE "mes_pda_his" ("pda_his_id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "op_tp" character varying NOT NULL, "cust_ord_dtl_id" integer, "cre_dt" TIMESTAMP DEFAULT now(), "upd_dt" TIMESTAMP DEFAULT now(), "upd_usr_id" character varying, "qlty" character varying NOT NULL, "co_cd" character varying(20) NOT NULL DEFAULT '', "qty" numeric DEFAULT '0', "cre_usr_id" character varying, "line_id" numeric NOT NULL DEFAULT '0', "line_nm" character varying, "pck_id_seq" character varying(20) NOT NULL DEFAULT '', CONSTRAINT "PK_e32df4be2b3979850c02b5ffff2" PRIMARY KEY ("pda_his_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_ib_prod" ("ib_id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ib_no" character varying(30), "cust_ord_dtl_id" integer, "ib_qty" numeric DEFAULT '0', "co_cd" character varying(20) NOT NULL, "pkg_dt" TIMESTAMP NOT NULL DEFAULT now(), "ib_dt" TIMESTAMP, "line_id" numeric NOT NULL, "line_nm" character varying, "cre_dt" TIMESTAMP DEFAULT now(), "upd_dt" TIMESTAMP DEFAULT now(), "cre_usr_id" character varying NOT NULL, "upd_usr_id" character varying NOT NULL, CONSTRAINT "PK_23102daa275d5ce032a43de4370" PRIMARY KEY ("ib_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_cust_ord_dtl" ("cust_ord_dtl_id" SERIAL NOT NULL, "co_cd" character varying(20) NOT NULL, "ord_no" character varying(20) NOT NULL, "sku_id" character varying(100), "ord_qty" numeric DEFAULT '0', "shp_dt" TIMESTAMP, "ib_qty" numeric DEFAULT '0', "ob_qty" numeric, "ut_price" numeric DEFAULT '0', "amt" numeric DEFAULT '0', "shp_to" character varying(30), "fn_qty" numeric DEFAULT '0', "pck_qty" numeric DEFAULT '0', "bar_cd" character varying(20), CONSTRAINT "UQ_181cae1ee6abc0ec9dc2c22ce81" UNIQUE ("co_cd", "ord_no", "sku_id"), CONSTRAINT "PK_72d9e2b9a1a5867461594396870" PRIMARY KEY ("cust_ord_dtl_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_role" ("role_id" SERIAL NOT NULL, "role_nm" character varying NOT NULL, "colr" character varying DEFAULT '#ffffff', "sts" character varying, CONSTRAINT "PK_8325457ff419ec32d9a398d3098" PRIMARY KEY ("role_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_flr" ("flr_id" numeric NOT NULL, "flr_cd" character varying(30) NOT NULL, "flr_nm" character varying(50) NOT NULL, CONSTRAINT "PK_676cd5ab0c8febf7879fa0efb1a" PRIMARY KEY ("flr_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_line" ("line_id" numeric NOT NULL, "line_nm" character varying(20) NOT NULL, "line_capa" numeric NOT NULL, "co_cd" character varying(20) NOT NULL, "floor_floor_id" numeric, CONSTRAINT "PK_c7f5b7eb8d153f52ccdd3bcde65" PRIMARY KEY ("line_id"))`);
    await queryRunner.query(`CREATE TYPE "public"."mes_ob_prod_sts_enum" AS ENUM('NEW', 'CANCELLED', 'DONE')`);
    await queryRunner.query(`CREATE TABLE "mes_ob_prod" ("ob_id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "rqst_no" character varying NOT NULL, "co_cd" character varying NOT NULL, "rqst_dt" TIMESTAMP NOT NULL, "rqst_ob_dt" TIMESTAMP, "ob_no" character varying NOT NULL, "ob_dt" TIMESTAMP NOT NULL, "rqst_qty" numeric NOT NULL, "stk_qty" numeric, "ob_qty" numeric, "sts" "public"."mes_ob_prod_sts_enum" NOT NULL DEFAULT 'NEW', "rmk" character varying, "cre_dt" TIMESTAMP NOT NULL DEFAULT now(), "upd_dt" TIMESTAMP NOT NULL DEFAULT now(), "cre_usr_id" character varying, "upd_usr_id" character varying, CONSTRAINT "PK_e267b041ca1e8d1117e00b22eed" PRIMARY KEY ("ob_id"))`);
    await queryRunner.query(`CREATE TABLE "mes_ob_prod_dtl" ("ob_dtl_id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "rqst_no" character varying NOT NULL, "sku_id" character varying NOT NULL, "ord_no" character varying NOT NULL, "rqst_qty" numeric NOT NULL, "stk_qty" numeric, "ob_qty" numeric, "note" character varying, "cre_dt" TIMESTAMP NOT NULL DEFAULT now(), "upd_dt" TIMESTAMP NOT NULL DEFAULT now(), "cre_usr_id" character varying NOT NULL, "upd_usr_id" character varying NOT NULL, "ob_id" integer, CONSTRAINT "PK_3c19a376d564a155b4cf2bc4c67" PRIMARY KEY ("ob_dtl_id"))`);
    await queryRunner.query(`ALTER TABLE "mes_pda_his" ADD CONSTRAINT "FK_77247cb991372b14d68d051dc5f" FOREIGN KEY ("cust_ord_dtl_id") REFERENCES "mes_cust_ord_dtl"("cust_ord_dtl_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    await queryRunner.query(`ALTER TABLE "mes_ib_prod" ADD CONSTRAINT "FK_843eb3c743fa77ae18e565261db" FOREIGN KEY ("cust_ord_dtl_id") REFERENCES "mes_cust_ord_dtl"("cust_ord_dtl_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    await queryRunner.query(`ALTER TABLE "mes_line" ADD CONSTRAINT "FK_17ec3c4c49e985e3af60b1c3087" FOREIGN KEY ("floor_floor_id") REFERENCES "mes_flr"("flr_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    await queryRunner.query(`ALTER TABLE "mes_ob_prod_dtl" ADD CONSTRAINT "FK_5273c6d61a9c10e329740c8fdb1" FOREIGN KEY ("ob_id") REFERENCES "mes_ob_prod"("ob_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`ALTER TABLE "mes_ob_prod_dtl" DROP CONSTRAINT "FK_5273c6d61a9c10e329740c8fdb1"`);
    await queryRunner.query(`ALTER TABLE "mes_line" DROP CONSTRAINT "FK_17ec3c4c49e985e3af60b1c3087"`);
    await queryRunner.query(`ALTER TABLE "mes_ib_prod" DROP CONSTRAINT "FK_843eb3c743fa77ae18e565261db"`);
    await queryRunner.query(`ALTER TABLE "mes_pda_his" DROP CONSTRAINT "FK_77247cb991372b14d68d051dc5f"`);
    await queryRunner.query(`DROP TABLE "mes_ob_prod_dtl"`);
    await queryRunner.query(`DROP TABLE "mes_ob_prod"`);
    await queryRunner.query(`DROP TYPE "public"."mes_ob_prod_sts_enum"`);
    await queryRunner.query(`DROP TABLE "mes_line"`);
    await queryRunner.query(`DROP TABLE "mes_flr"`);
    await queryRunner.query(`DROP TABLE "mes_role"`);
    await queryRunner.query(`DROP TABLE "mes_cust_ord_dtl"`);
    await queryRunner.query(`DROP TABLE "mes_ib_prod"`);
    await queryRunner.query(`DROP TABLE "mes_pda_his"`);
  }

}
